pipeline {
  options {
	buildDiscarder(logRotator(numToKeepStr: '02'))
  }
    agent any
        parameters {
            string(
                name:'URL',
                defaultValue:"default",
                description: "enter URL")
            string(
                name:'groupid',
                defaultValue:'default',
                description:'enter groupid')
            string(
                name:'artifactid1',
                defaultValue:'default',
                description:'enter artifactid1')
            string(
                name:'image',
                defaultValue:'default',
                description:'enter image name')
        }
        stages {
            stage('SCM') {
                steps {
                    checkout scm
                    }
                }
                stage('Build') {
                    steps {
                        script {
                            sh '''
                                mvn clean
                                mvn clean install 
                            '''
                        }
                    }
                }
                stage('Sonar-Analysis') {
                    steps {
                        script {
                            sh '''
                                ls -lrt
                            '''
                        }
                    }
                }
                stage('Test-Cases') {
                    steps {
                        script {
                            sh '''
                                ls
                            '''
                        }
                    }
                }
                stage('Package') {
                    steps {
                        script {
                            sh '''
                                mvn package
                            '''
                        }
                    }
                }
                stage('Archive artifact') {
                  steps {
                    echo 'I am successfull completed :)'
                    archiveArtifacts '**/*.war'
                  }
                }
                stage('Deploy-To-Nexus') {
                  steps {
                    script {
                    	sh '''
          	                mvn deploy:deploy-file -DgroupId=chatak-afcs -DartifactId=transit-web -Dversion=4.0.0-SNAPSHOT -DgeneratePom=true -Dpackaging=war -DrepositoryId=nexus -Durl=http://192.168.0.91:8081/repository/maven-snapshots/ -Dfile=transit-web/target/transit-web.war
						'''
                    }
                  }
                }
                stage('Artifact-Download') {
                    steps {
                        script {
                            sh '''
                                cd devops/QA/transit
                                sh file.sh
                            '''
                        }
                    }
                }
                stage('Build-APP-Image') {
                    steps {
                        script {
                            sh '''
                                cd devops/QA/transit
                                docker build -t $image:${BUILD_NUMBER} .
                            '''
                        }
                    }
                }
                stage('Push-Docker-IMAGE') {
                    steps {
                        script {
                            sh '''
                                cd devops/QA/transit
                                sh docker.sh
                            '''
                        }
                    }
                }
                stage('RUN-Image') {
                    steps {
                        script {
                            sh '''
                                cd devops/QA/transit
                                sh script.sh 192.168.0.91:8082 $image ${BUILD_NUMBER} deploy.yml kube.yml
                            '''
                        }
                    }
                }
        }
}
